*{
    margin: 0;
    padding: 0;
    border: 0;
    box-sizing: border-box;
    outline: none;
}

body{
    height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    background: #06283D;
}


/*

A propriedade overflow: hidden no CSS controla o que acontece com 
o conteúdo que ultrapassa as bordas de um elemento. Quando usada, esconde qualquer conteúdo que transborde da área visível do elemento.
*/
.container{
    position: relative;
    background: #ffff;
    padding: 28px 38px;
    flex-basis: 1px;
    color: #06283D;
    border-radius: 18px;
    flex-basis: 400px;
    height: 105px;
    overflow: hidden;
    font-family: 'Roboto', sans-serif;
    transition: 0.6s ease-out;
}

.pesquisa-box{
    width: 100%;
    height: min-content;
    display: flex;
    justify-content:space-between;
    align-items: center;
    font-size: 25px;
}
.pesquisa-box input{
    font-size: 20px;
    font-weight: 500;
    width: 80%;
    text-transform: uppercase;
    padding-left: 32px;
}

.pesquisa-box input::placeholder{
    font-size: 20px;
    font-weight: 500;
    text-transform: capitalize;
}

.pesquisa-box button{
    width: 50px;
    height: 50px;
    background: #dff6ff;
    cursor: pointer;
    border-radius: 50%;
    font-size: 22px;
    transition: 0.4s ease-out;
}

.pesquisa-box button:hover{
    background: #06283D;
    color: #ffff;
}


.pesquisa-box i{
    position: absolute;
    font-size: 28px;
}

.clima-box{
    text-align: center;
    justify-content: center;
}

.clima-box image{
    width: 60%;
    margin-top: 30px;
}


.temperatura{
    position: relative;
    display: flex;
    justify-content: center;
    margin-top: 40px;
    font-weight: 800;
}

.temperatura p{
    font-size: 50px;
}

.temperatura span{
    font-size: 20px;
}

.descrição{
    text-transform: capitalize;
    font-weight: 500;
    font-size: 22px;
}

.clima-detalhes{
    display: flex;
    justify-content: space-between;
    margin-top: 30px;
    font-weight: 700;
    width: 100%;
    height: 100px;
}

.velocidade-vento, .umidade{
    display: flex;
    align-items: center;
    width: 50%;
}

.umidade{
    padding-left: 20px;
    justify-content: flex-start;
}


.velocidade-vento{
    padding-right: 20px;
    justify-content: flex-end;
}

.clima-detalhes i{
    font-size: 26px;
    margin-right: 10px;
    margin-top: 6px;
}

.nao-encontrado{
    width: 100%;
    text-align: center;
    margin-top: 50px;
    scale: 0;
    opacity: 0;
    display: none;
}

.nao-encontrado img{
    width: 70%;
}

.nao-encontrado p{
    margin-top: 12px;
    font-weight: 500;
    font-size: 22px;
    text-transform: capitalize;
}

.clima-box, .clima-detalhes{
    scale: 0;
    opacity: 0;
}


/*
O que é @keyframes?
O @keyframes é uma regra CSS usada para definir uma animação. 
Ele especifica os estados intermediários e finais que um elemento 
deve passar durante a execução da animação. Cada animação tem um 
nome único, que é referenciado posteriormente no código CSS.

Estrutura do @keyframes:
from: Representa o estado inicial da animação (equivalente a 0% do tempo).
to: Representa o estado final da animação (equivalente a 100% do tempo).
0%, 50%, 100% (ou outros percentuais): Usados para criar animações mais complexas com 
vários estados intermediários.
*/
.fadeIn{
    animation: 0.5s fadeIn forwards;
    animation-delay: 0.5s;
}

@keyframes fadeIn{
    to {
        scale: 1;
        opacity: 1;
    }
}